/*
 * Common LoginScreen for all users. 
 * User is recognized by the passed parameter String
 */
package Java_Files;

import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;


/**
 *
 * @author Pasindu
 */
public class LoginScreen extends javax.swing.JFrame {
    
    private int logcount;
    private String usrType;
    int employeeId = 0;
    /**
     * Creates new form LoginScreen
     * @param type
     */
    public LoginScreen(String type) {
        usrType = type;
        showtime(); //To display the time and date
        initComponents();
        
    }

    void showtime() {
        new javax.swing.Timer(0, new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent ae) {
                Date d = new Date();
                SimpleDateFormat sdf = new SimpleDateFormat("hh:mm:ss:a");
                SimpleDateFormat sdf2 = new SimpleDateFormat("dd/MM/yy");
                String tt = sdf.format(d);
                String dt = sdf2.format(d);
                jLabel1.setText(tt);
                jLabel2.setText(dt);
            }
        }).start();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        usrName = new javax.swing.JTextField();
        passField = new javax.swing.JPasswordField();
        jLabel6 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jProgressBar1 = new javax.swing.JProgressBar();
        msg = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(420, 465));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        jLabel1.setText("Time");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 10, 80, -1));

        jLabel2.setText("Date");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        jLabel3.setFont(new java.awt.Font("Cornerstone", 0, 24)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Login");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 70, 160, 50));

        jLabel4.setText("UserName");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 170, -1, -1));
        getContentPane().add(usrName, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 160, 220, 30));
        getContentPane().add(passField, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 220, 220, 30));

        jLabel6.setText("Password");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 230, 60, -1));

        jButton1.setText("Back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 350, -1, -1));

        jButton2.setText("Login");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 350, -1, -1));

        jProgressBar1.setStringPainted(true);
        getContentPane().add(jProgressBar1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 410, 420, -1));
        getContentPane().add(msg, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 290, 230, 20));

        setSize(new java.awt.Dimension(437, 465));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        try {
            String usrname = usrName.getText();
            String pass = new String(passField.getPassword());
            ResultSet RS = dbcon.search("SELECT * FROM "+usrType+" WHERE username='"+usrname+"'AND password='"+pass+"' ");
            
            if(RS.next()){
                employeeId = RS.getInt("empId");
                loadProgressBar(usrType);
            }else{
              logcount++;
              showLoginMsg();
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        MainMenu MM = new MainMenu();
        MM.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LoginScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LoginScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LoginScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LoginScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LoginScreen("General").setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JLabel msg;
    private javax.swing.JPasswordField passField;
    private javax.swing.JTextField usrName;
    // End of variables declaration//GEN-END:variables

    private void showLoginMsg() {
        if(logcount==1){
            msg.setText("First Attempt Failed");
            clearfields();
        }else if(logcount==2){
            msg.setText("Second Attempt Failed");
            clearfields();
        }else if(logcount==3){
            msg.setText("Your Last Attempt!!");
            clearfields();
        }else{
            JOptionPane.showMessageDialog(null,"Invalid Login Credentials","System Locked",JOptionPane.ERROR_MESSAGE);
            msg.setText("The System has been Locked");
            msg.setForeground(Color.red);
            clearfields();
            usrName.setEnabled(false);
            passField.setEnabled(false);
    
        }

    }
    
    private void clearfields() {
        usrName.setText(null);
        passField.setText(null);
    }
    
    //Animates the progressbar before proceeding to the next window.
    
    private void loadProgressBar(String usrType) {
        if (usrType.equals("administrator")) {
            new Thread(new Runnable() {

                 @Override
                 public void run() {
                     try {
                        for(int i = 0; i <= 100; i++){
                            jProgressBar1.setValue(i);
                            Thread.sleep(25);
                            if(i == 100){
                                Administrator_Screen AdminScreen = new Administrator_Screen();
                                AdminScreen.setVisible(true);
                                dispose();                                        
                            } 
                        }
                     } catch (Exception e) {
                         e.printStackTrace();
                     }
                 }
             }).start();
        }else if (usrType.equals("doctor")) {
            new Thread(new Runnable() {

                 @Override
                 public void run() {
                     try {
                        for(int i = 0; i <= 100; i++){
                            jProgressBar1.setValue(i);
                            Thread.sleep(25);
                            if(i == 100){
                                Doctor_Profile docProf = new Doctor_Profile(employeeId);
                                docProf.setVisible(true);
                                dispose();
                            } 
                        }
                     } catch (Exception e) {
                         e.printStackTrace();
                     }
                 }
             }).start();
        }else if (usrType.equals("nurse")) {
            new Thread(new Runnable() {

                 @Override
                 public void run() {
                     try {
                        for(int i = 0; i <= 100; i++){
                            jProgressBar1.setValue(i);
                            Thread.sleep(25);
                            if(i == 100){
                                /*AdministratorScreen AdmS = new AdministratorScreen();
                                AdmS.setVisible(true);
                                dispose();*/
                            } 
                        }
                     } catch (Exception e) {
                         e.printStackTrace();
                     }
                 }
             }).start();
        }else if (usrType.equals("labtechnician")) {
            new Thread(new Runnable() {

                 @Override
                 public void run() {
                     try {
                        for(int i = 0; i <= 100; i++){
                            jProgressBar1.setValue(i);
                            Thread.sleep(25);
                            if(i == 100){
                                /*AdministratorScreen AdmS = new AdministratorScreen();
                                AdmS.setVisible(true);
                                dispose();*/
                            } 
                        }
                     } catch (Exception e) {
                         e.printStackTrace();
                     }
                 }
             }).start();
        }
    }
}
